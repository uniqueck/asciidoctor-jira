// *** WARNING: DO NOT MODIFY *** This is a generated JavaScript source code!
//
// Generated by LF-ET 2.2.1 (230906a), https://www.lohrfink.de/lfet
// From decision table
// "/opt/data/github/asciidoctor/asciidoctor-jira/lfet/common/plantumlGanttConfig.lfet"
// 02.10.2023 00:33
//
// Changes to this code resulting from refactorings can be synchronised
// with LF-ET using the function "Scrapbook Import".
//
// Prolog Decision Table ---->
function plantumlGanttConfig (macroName, parent, attrs, logger) {
  let _step = 1
  let _exit = false
  const _prefix = 'gantt'
  const _prefixDoc = `${macroName.toLowerCase()}${_prefix}-`
  const _plantumlGanttConfig = { }
  const doc = parent.getDocument()
  do {
    _exit = true
    // $$BasicIndentLevel=2
    // Prolog Decision Table <----
    // Condition B01/01: step / 1 / showCategory
    if (_step === 1) {
      // Condition B02/01: showCategory / ATTR / showCategory
      if (attrs[`${_prefix}showCategory`]) {
        // Rule R01 ---->
        // Trace ---->
        logger.info(`plantumlGanttConfig - 20231002.003307 - 1 / 12 - ${JSON.stringify(_plantumlGanttConfig)}`)
        // Trace <----
        // Action A01/01: showCategory / ATTR / showCategory
        _plantumlGanttConfig.showCategory = attrs[`${_prefix}ShowCategory`] === true
        // Action A04/01: next step / + / next step
        _step++
        _exit = false
        // Rule R01 <----
      // Condition B02/02: showCategory / DOC / show-category
      } else if (doc.getAttribute(`${_prefixDoc}show-category`)) {
        // Rule R02 ---->
        // Trace ---->
        logger.info(`plantumlGanttConfig - 20231002.003307 - 2 / 12 - ${JSON.stringify(_plantumlGanttConfig)}`)
        // Trace <----
        // Action A01/02: showCategory / DOC / showCategory
        _plantumlGanttConfig.showCategory = doc.getAttribute(`${_prefixDoc}show-category`) === 'true'
        // Action A04/01: next step / + / next step
        _step++
        _exit = false
        // Rule R02 <----
      } else {
        // Rule R03 ---->
        // Trace ---->
        logger.info(`plantumlGanttConfig - 20231002.003307 - 3 / 12 - ${JSON.stringify(_plantumlGanttConfig)}`)
        // Trace <----
        // Action A01/03: showCategory / DEF / showCategory
        _plantumlGanttConfig.showCategory = true
        // Action A04/01: next step / + / next step
        _step++
        _exit = false
        // Rule R03 <----
      }
    // Condition B01/02: step / 2 / showLegend
    } else if (_step === 2) {
      // Condition B03/01: showLegend / ATTR / ShowLegend
      if (attrs[`${_prefix}ShowLegend`]) {
        // Rule R04 ---->
        // Trace ---->
        logger.info(`plantumlGanttConfig - 20231002.003307 - 4 / 12 - ${JSON.stringify(_plantumlGanttConfig)}`)
        // Trace <----
        // Action A02/02: showLegend / ATTR / showLegend
        _plantumlGanttConfig.showLegend = attrs[`${_prefix}ShowLegend`] === true
        // Action A04/01: next step / + / next step
        _step++
        _exit = false
        // Rule R04 <----
      // Condition B03/02: showLegend / DOC / show-legend
      } else if (doc.getAttribute(`${_prefixDoc}show-legend`)) {
        // Rule R05 ---->
        // Trace ---->
        logger.info(`plantumlGanttConfig - 20231002.003307 - 5 / 12 - ${JSON.stringify(_plantumlGanttConfig)}`)
        // Trace <----
        // Action A02/03: showLegend / DOC / showLegend
        _plantumlGanttConfig.showLegend = doc.getAttribute(`${_prefixDoc}show-legend`) === 'true'
        // Action A04/01: next step / + / next step
        _step++
        _exit = false
        // Rule R05 <----
      } else {
        // Rule R06 ---->
        // Trace ---->
        logger.info(`plantumlGanttConfig - 20231002.003307 - 6 / 12 - ${JSON.stringify(_plantumlGanttConfig)}`)
        // Trace <----
        // Action A02/01: showLegend / DEF / showLegend
        _plantumlGanttConfig.showLegend = true
        // Action A04/01: next step / + / next step
        _step++
        _exit = false
        // Rule R06 <----
      }
    // Condition B01/03: step / 3 / legendAlignment
    } else if (_step === 3) {
      // Condition B04/01: legendAlignment / ATTR / LegendAlignment
      if (attrs[`${_prefix}LegendAlignment`]) {
        // Rule R07 ---->
        // Trace ---->
        logger.info(`plantumlGanttConfig - 20231002.003307 - 7 / 12 - ${JSON.stringify(_plantumlGanttConfig)}`)
        // Trace <----
        // Action A03/01: legendAlignment / ATTR / legendAlignment
        _plantumlGanttConfig.legendAlignment = attrs[`${_prefix}LegendAlignment`].toLowerCase()
        // Action A04/01: next step / + / next step
        _step++
        _exit = false
        // Rule R07 <----
      // Condition B04/02: legendAlignment / DOC / legend-alignment
      } else if (doc.getAttribute(`${_prefixDoc}legend-alignment`)) {
        // Rule R08 ---->
        // Trace ---->
        logger.info(`plantumlGanttConfig - 20231002.003307 - 8 / 12 - ${JSON.stringify(_plantumlGanttConfig)}`)
        // Trace <----
        // Action A03/03: legendAlignment / DOC / legendAlignment
        _plantumlGanttConfig.legendAlignment = doc.getAttribute(`${_prefixDoc}legend-alignment`).toLowerCase()
        // Action A04/01: next step / + / next step
        _step++
        _exit = false
        // Rule R08 <----
      } else {
        // Rule R09 ---->
        // Trace ---->
        logger.info(`plantumlGanttConfig - 20231002.003307 - 9 / 12 - ${JSON.stringify(_plantumlGanttConfig)}`)
        // Trace <----
        // Action A03/02: legendAlignment / DEF / legendAlignment
        _plantumlGanttConfig.legendAlignment = 'left'
        // Action A04/03: next step / E / Exit
        _exit = true
        // Rule R09 <----
      }
    } else {
      // Condition B05/01: legend alignment / left / legendAlignment
      if (_plantumlGanttConfig.legendAlignment === 'left') {
        // Rule R10 ---->
        // Trace ---->
        logger.info(`plantumlGanttConfig - 20231002.003307 - 10 / 12 - ${JSON.stringify(_plantumlGanttConfig)}`)
        // Trace <----
        // Action A04/03: next step / E / Exit
        _exit = true
        // Rule R10 <----
      // Condition B05/02: legend alignment / right / legendAlignment
      } else if (_plantumlGanttConfig.legendAlignment === 'right') {
        // Rule R11 ---->
        // Trace ---->
        logger.info(`plantumlGanttConfig - 20231002.003307 - 11 / 12 - ${JSON.stringify(_plantumlGanttConfig)}`)
        // Trace <----
        // Action A04/03: next step / E / Exit
        _exit = true
        // Rule R11 <----
      } else {
        // Rule R12 ---->
        // Trace ---->
        logger.info(`plantumlGanttConfig - 20231002.003307 - 12 / 12 - ${JSON.stringify(_plantumlGanttConfig)}`)
        // Trace <----
        // Action A03/02: legendAlignment / DEF / legendAlignment
        _plantumlGanttConfig.legendAlignment = 'left'
        // Action A04/03: next step / E / Exit
        _exit = true
        // Rule R12 <----
      }
    }
    // Epilog Decision Table ---->
  } while (_exit === false)
  return _plantumlGanttConfig
}

module.exports = {
  createConfig: (macroName, parent, attrs, logger) => {
    return plantumlGanttConfig(macroName, parent, attrs, logger)
  }
}
// Epilog Decision Table <----

// End of generated JavaScript source code
// Generated by LF-ET 2.2.1 (230906a), https://www.lohrfink.de/lfet
