// *** WARNING: DO NOT MODIFY *** This is a generated JavaScript source code!
//
// Generated by LF-ET 2.2.1 (230906a), https://www.lohrfink.de/lfet
// From decision table
// "/opt/data/github/asciidoctor/asciidoctor-jira/lfet/roadmapConfig.lfet"
// 25.09.2023 13:28
//
// Changes to this code resulting from refactorings can be synchronised
// with LF-ET using the function "Scrapbook Import".
//
// Prolog Decision Table ---->
function roadmapConfig (name, parent, target, attrs, logger) {
  let _step = 1
  let _exit = false
  let config = {
    toJSON: function() {
      let result = {}
        for (let x in this) {
          if (x !== 'jiraUsername' && x !== 'jiraPassword') {
            result[x] = this[x]
          } else {
            if (x === 'jiraUsername' || x === 'jiraPassword') {
              result[x] = this[x].replace(/./g, '*')
            }
          }
        }
        return result
      }
  }
  const doc = parent.getDocument()
  do {
    _exit = true
    // $$BasicIndentLevel=2
    // Prolog Decision Table <----
    // Condition C01/01: Step / 1 / jira project key information
    if ( _step === 1 ) {
      // Condition C02: jira project key information is set
      if (  target !== undefined ) {
        // Rule R01 ---->
        // Trace ---->
        logger.info(`roadmapConfig - 20230925.132853 - 1 / 22 - ${JSON.stringify(config)}`)
        // Trace <----
        // Action A02: set jira project
        config.projectKey = parent.applySubstitutions(target, ['attributes'])
        // Action A08/01: next step / + / next step
        _step++
        _exit = false
        // Rule R01 <----
      } else {
        // Rule R02 ---->
        // Trace ---->
        logger.info(`roadmapConfig - 20230925.132853 - 2 / 22 - ${JSON.stringify(config)}`)
        // Trace <----
        // Action A07/01: log mandatory information is missing / JIRA PROJECT / Jira project key is missing
        logger.error('Jira project key is missing')
        // Action A08/02: next step / E / Exit
        _exit = true
        // Rule R02 <----
      }
    // Condition C01/02: Step / 2 / jira base url information
    } else if (  _step === 2 ) {
      // Condition C03/01: jira base url is set / ATTR / via macro attributes
      if (  attrs.jiraBaseUrl  ) {
        // Rule R03 ---->
        // Trace ---->
        logger.info(`roadmapConfig - 20230925.132853 - 3 / 22 - ${JSON.stringify(config)}`)
        // Trace <----
        // Action A01/01: set jira base url / ATTR / via macro attributes
        config.jiraBaseUrl = attrs.jiraBaseUrl
        // Action A08/01: next step / + / next step
        _step++
        _exit = false
        // Rule R03 <----
      // Condition C03/02: jira base url is set / JIRA_PRJ / via doc attribute and jira project key suffix
      } else if ( doc.getAttribute(`${config.projectKey.toLowerCase()}-${name}-jira-baseurl`) ) {
        // Rule R04 ---->
        // Trace ---->
        logger.info(`roadmapConfig - 20230925.132853 - 4 / 22 - ${JSON.stringify(config)}`)
        // Trace <----
        // Action A01/03: set jira base url / JIRA_PRJ / via doc attribute and jira project key suffix
        config.jiraBaseUrl = doc.getAttribute(`${config.projectKey.toLowerCase()}.${name}-jira-baseurl`)
        // Action A08/01: next step / + / next step
        _step++
        _exit = false
        // Rule R04 <----
      // Condition C03/03: jira base url is set / DOC / via doc attribute
      } else if ( doc.getAttribute(`${name}-jira-baseurl`) ) {
        // Rule R05 ---->
        // Trace ---->
        logger.info(`roadmapConfig - 20230925.132853 - 5 / 22 - ${JSON.stringify(config)}`)
        // Trace <----
        // Action A01/02: set jira base url / DOC / via doc attribute
        config.jiraBaseUrl = doc.getAttribute(`${name}-jira-baseurl`)
        // Action A08/01: next step / + / next step
        _step++
        _exit = false
        // Rule R05 <----
      } else {
        // Rule R06 ---->
        // Trace ---->
        logger.info(`roadmapConfig - 20230925.132853 - 6 / 22 - ${JSON.stringify(config)}`)
        // Trace <----
        // Action A07/02: log mandatory information is missing / BASE_URL / Jira base url is missing
        logger.error('Jira base url is missing')
        // Action A08/02: next step / E / Exit
        _exit = true
        // Rule R06 <----
      }
    // Condition C01/03: Step / 3 / jira username information
    } else if (  _step === 3 ) {
      // Condition C04/01: jira username is set / DOC_PRJ / via doc attribute and jira project key praefix
      if ( doc.getAttribute(`${config.projectKey.toLowerCase()}-${name}-jira-username`) ) {
        // Rule R07 ---->
        // Trace ---->
        logger.info(`roadmapConfig - 20230925.132853 - 7 / 22 - ${JSON.stringify(config)}`)
        // Trace <----
        // Action A03/02: set jira username / DOC_PRJ / via doc attribute and jira project key praefix
        config.jiraUsername = doc.getAttribute(`${config.projectKey.toLowerCase()}-${name}-jira-username`)
        // Action A08/01: next step / + / next step
        _step++
        _exit = false
        // Rule R07 <----
      // Condition C04/02: jira username is set / DOC / via doc attribute
      } else if ( doc.getAttribute(`${name}-jira-username`) ) {
        // Rule R08 ---->
        // Trace ---->
        logger.info(`roadmapConfig - 20230925.132853 - 8 / 22 - ${JSON.stringify(config)}`)
        // Trace <----
        // Action A03/01: set jira username / DOC / via doc attribute
        config.jiraUsername = doc.getAttribute(`${name}-jira-username`)
        // Action A08/01: next step / + / next step
        _step++
        _exit = false
        // Rule R08 <----
      // Condition C04/03: jira username is set / ENV_PRJ / via env and jira project key praefix
      } else if ( process.env[`${config.projectKey.toUpperCase()}_${name.toUpperCase()}_JIRA_USERNAME`] ) {
        // Rule R09 ---->
        // Trace ---->
        logger.info(`roadmapConfig - 20230925.132853 - 9 / 22 - ${JSON.stringify(config)}`)
        // Trace <----
        // Action A03/04: set jira username / ENV_PRJ / via env and jira project key praefix
        config.jiraUsername = process.env[`${config.projectKey.toUpperCase()}_${name.toUpperCase()}_JIRA_USERNAME`]
        // Action A08/01: next step / + / next step
        _step++
        _exit = false
        // Rule R09 <----
      // Condition C04/04: jira username is set / ENV / via env
      } else if ( process.env[`${name.toUpperCase()}_JIRA_USERNAME`] ) {
        // Rule R10 ---->
        // Trace ---->
        logger.info(`roadmapConfig - 20230925.132853 - 10 / 22 - ${JSON.stringify(config)}`)
        // Trace <----
        // Action A03/03: set jira username / ENV / via env
        config.jiraUsername = process.env[`${name.toUpperCase()}_JIRA_USERNAME`]
        // Action A08/01: next step / + / next step
        _step++
        _exit = false
        // Rule R10 <----
      } else {
        // Rule R11 ---->
        // Trace ---->
        logger.info(`roadmapConfig - 20230925.132853 - 11 / 22 - ${JSON.stringify(config)}`)
        // Trace <----
        // Action A07/03: log mandatory information is missing / JIRA_USR / Jira username is missing
        logger.error('Jira username is missing')
        // Action A08/02: next step / E / Exit
        _exit = true
        // Rule R11 <----
      }
    // Condition C01/04: Step / 4 / jira password / apitoken information
    } else if (  _step === 4 ) {
      // Condition C05/01: jira password / apitoken is set / DOC_PRJ / via doc attribute and jira project key praefix
      if ( doc.getAttribute(`${config.projectKey.toLowerCase()}-${name}-jira-password`) ) {
        // Rule R12 ---->
        // Trace ---->
        logger.info(`roadmapConfig - 20230925.132853 - 12 / 22 - ${JSON.stringify(config)}`)
        // Trace <----
        // Action A04/02: set jira password / apitoken / DOC_PRJ / via doc attribute and jira project key praefix
        config.jiraPassword = doc.getAttribute(`${config.projectKey.toLowerCase()}-${name}-jira-password`)
        // Action A08/01: next step / + / next step
        _step++
        _exit = false
        // Rule R12 <----
      // Condition C05/02: jira password / apitoken is set / DOC / via doc attribute
      } else if ( doc.getAttribute(`${name}-jira-password`) ) {
        // Rule R13 ---->
        // Trace ---->
        logger.info(`roadmapConfig - 20230925.132853 - 13 / 22 - ${JSON.stringify(config)}`)
        // Trace <----
        // Action A04/01: set jira password / apitoken / DOC / via doc attribute
        config.jiraPassword = doc.getAttribute(`${name}-jira-password`)
        // Action A08/01: next step / + / next step
        _step++
        _exit = false
        // Rule R13 <----
      // Condition C05/03: jira password / apitoken is set / ENV_PRJ / via env and jira project key praefix
      } else if ( process.env[`${config.projectKey.toUpperCase()}_${name.toUpperCase()}_JIRA_PASSWORD`] ) {
        // Rule R14 ---->
        // Trace ---->
        logger.info(`roadmapConfig - 20230925.132853 - 14 / 22 - ${JSON.stringify(config)}`)
        // Trace <----
        // Action A04/04: set jira password / apitoken / ENV_PRJ / via env and jira project key praefix
        config.jiraPassword = process.env[`${config.projectKey.toUpperCase()}_${name.toUpperCase()}_JIRA_PASSWORD`]
        // Action A08/01: next step / + / next step
        _step++
        _exit = false
        // Rule R14 <----
      // Condition C05/04: jira password / apitoken is set / ENV / via env
      } else if ( process.env[`${name.toUpperCase()}_JIRA_PASSWORD`] ) {
        // Rule R15 ---->
        // Trace ---->
        logger.info(`roadmapConfig - 20230925.132853 - 15 / 22 - ${JSON.stringify(config)}`)
        // Trace <----
        // Action A04/03: set jira password / apitoken / ENV / via env
        config.jiraPassword = process.env[`${name.toUpperCase()}_JIRA_PASSWORD`]
        // Action A08/01: next step / + / next step
        _step++
        _exit = false
        // Rule R15 <----
      } else {
        // Rule R16 ---->
        // Trace ---->
        logger.info(`roadmapConfig - 20230925.132853 - 16 / 22 - ${JSON.stringify(config)}`)
        // Trace <----
        // Action A07/04: log mandatory information is missing / JIRA_PWD / Jira password / apitoken is missing
        logger.error('Jira password / apitoken is missing')
        // Action A08/02: next step / E / Exit
        _exit = true
        // Rule R16 <----
      }
    // Condition C01/05: Step / 5 / year information
    } else if ( _step === 5 ) {
      // Condition C06/01: year information is set / ATTR / via macro attributes
      if ( attrs.year ) {
        // Rule R17 ---->
        // Trace ---->
        logger.info(`roadmapConfig - 20230925.132853 - 17 / 22 - ${JSON.stringify(config)}`)
        // Trace <----
        // Action A05/01: set year / ATTR / via macro attributes
        config.year = attrs.year
        // Action A08/01: next step / + / next step
        _step++
        _exit = false
        // Rule R17 <----
      // Condition C06/02: year information is set / DOC / via doc attribute
      } else if ( doc.getAttribute(`${name}-year`) ) {
        // Rule R18 ---->
        // Trace ---->
        logger.info(`roadmapConfig - 20230925.132853 - 18 / 22 - ${JSON.stringify(config)}`)
        // Trace <----
        // Action A05/02: set year / DOC / via doc attribute
        config.year = doc.getAttribute(`${name}-year`)
        // Action A08/01: next step / + / next step
        _step++
        _exit = false
        // Rule R18 <----
      } else {
        // Rule R19 ---->
        // Trace ---->
        logger.info(`roadmapConfig - 20230925.132853 - 19 / 22 - ${JSON.stringify(config)}`)
        // Trace <----
        // Action A05/03: set year / DEF / current year
        config.year = new Date().toLocaleDateString('en-US', { year: 'numeric' })
        // Action A08/01: next step / + / next step
        _step++
        _exit = false
        // Rule R19 <----
      }
    } else {
      // Condition C07/01: category information is set / ATTR / category information via macro attribute
      if ( attrs.categories ) {
        // Rule R20 ---->
        // Trace ---->
        logger.info(`roadmapConfig - 20230925.132853 - 20 / 22 - ${JSON.stringify(config)}`)
        // Trace <----
        // Action A06/01: set categories / ATTR / via macro attributes
        config.categories = attrs.categories.split(',').map(it => it.trim())
        // Action A08/02: next step / E / Exit
        _exit = true
        // Rule R20 <----
      // Condition C07/02: category information is set / DOC / category information via doc attribute
      } else if ( doc.getAttribute(`${name}-categories`) ) {
        // Rule R21 ---->
        // Trace ---->
        logger.info(`roadmapConfig - 20230925.132853 - 21 / 22 - ${JSON.stringify(config)}`)
        // Trace <----
        // Action A06/02: set categories / DOC / via doc attribute
        config.categories = doc.getAttribute(`${name}-categories`).split(',').map(it => it.trim())
        // Action A08/02: next step / E / Exit
        _exit = true
        // Rule R21 <----
      } else {
        // Rule R22 ---->
        // Trace ---->
        logger.info(`roadmapConfig - 20230925.132853 - 22 / 22 - ${JSON.stringify(config)}`)
        // Trace <----
        // Action A06/03: set categories / DEF / maintenance,feature,security,infrastructure,deprecated,migration
        config.categories = ['maintenance','feature','security','infrastructure','deprecated','migration']
        // Action A08/02: next step / E / Exit
        _exit = true
        // Rule R22 <----
      }
    }
    // Epilog Decision Table ---->
  } while (_exit === false)
  return config
}

module.exports = {
  createConfig: (name, parent, target, attrs, logger) => {
    return roadmapConfig(name, parent, target, attrs, logger)
  }
}
// Epilog Decision Table <----

// End of generated JavaScript source code
// Generated by LF-ET 2.2.1 (230906a), https://www.lohrfink.de/lfet
